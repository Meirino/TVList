{"version":3,"file":"message.service.js","sourceRoot":"","sources":["message.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAMA;gBAsBI,wBAAoB,YAAwB;oBAAxB,iBAAY,GAAZ,YAAY,CAAY;oBAnBpC,sBAAiB,GAAW;wBAChC,IAAI,sBAAO,CAAC,CAAC,EAAC,CAAC,EAAC,iCAAiC,EAAC,WAAW,CAAC;wBAC9D,IAAI,sBAAO,CAAC,CAAC,EAAC,CAAC,EAAC,kBAAkB,EAAC,YAAY,CAAC;wBAChD,IAAI,sBAAO,CAAC,CAAC,EAAC,CAAC,EAAC,gCAAgC,EAAC,QAAQ,CAAC;wBAC1D,IAAI,sBAAO,CAAC,CAAC,EAAC,CAAC,EAAC,YAAY,EAAC,aAAa,CAAC;wBAC3C,IAAI,sBAAO,CAAC,CAAC,EAAC,CAAC,EAAC,cAAc,EAAC,OAAO,CAAC;wBACvC,IAAI,sBAAO,CAAC,CAAC,EAAC,CAAC,EAAC,UAAU,EAAC,MAAM,CAAC;qBACrC,CAAC;oBAEM,+BAA0B,GAAY;wBAC1C,CAAC,CAAC,EAAC,CAAC,CAAC;wBACL,CAAC,CAAC,EAAC,CAAC,CAAC;wBACL,CAAC,CAAC,EAAC,CAAC,CAAC;wBACL,CAAC,CAAC,EAAC,CAAC,CAAC;wBACL,CAAC,CAAC,EAAC,CAAC,CAAC;wBACL,CAAC,CAAC,EAAC,CAAC,CAAC;qBACR,CAAC;gBAG4C,CAAC;gBAExC,yCAAgB,GAAvB,UAAwB,MAAa;oBACjC,IAAI,4BAA4B,GAAC,eAAU,CAAE,SAAS,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;oBACxF,IAAI,sCAAsC,GAAE,4BAA4B,CAAC,MAAM,CAAC,UAAC,CAAC;wBAC9E,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAE,MAAM,CAAA;oBACvB,CAAC,CAAC,CAAC,GAAG,CAAC,UAAC,CAAC;wBACL,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;oBACf,CAAC,CAAC,CAAC;oBACH,IAAI,4BAA4B,GAAG,eAAU,CAAC,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;oBAChF,IAAI,WAAW,GAAE,sCAAsC,CAAC,OAAO,CAAC,UAAC,YAAY;wBACzE,MAAM,CAAC,4BAA4B,CAAC,MAAM,CAAC,UAAC,UAAU;4BAClD,MAAM,CAAC,YAAY,IAAE,UAAU,CAAC,EAAE,CAAC;wBACvC,CAAC,CAAC,CAAA;oBACN,CAAC,CAAC,CAAA;oBAEF,IAAI,QAAQ,GAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;oBACnD,IAAI,qBAAqB,GAAC,WAAW,CAAC,OAAO,CAAC,UAAA,CAAC;wBAC/C,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAA,CAAC,IAAG,MAAM,CAAA,CAAC,EAAC,UAAU,EAAC,CAAC,EAAC,OAAO,EAAC,CAAC,EAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;oBAC/D,CAAC,CAAC,CAAC;oBACC,MAAM,CAAC,qBAAqB,CAAC;gBAEjC,CAAC;gBA7CL;oBAAC,iBAAU,EAAE;;kCAAA;gBA+Cb,qBAAC;YAAD,CAAC,AA9CD,IA8CC;YA9CD,2CA8CC,CAAA","sourcesContent":["import {Injectable} from 'angular2/core';\nimport {Message} from './message.data';\nimport {Observable} from 'rxjs/Rx';\nimport {userService} from '../user/user.service'\n\n@Injectable()\nexport class messageService{\n\n\n    private _listaComentarios:Message[]=[\n        new Message(0,4,'Muy Buena, divertida fascinante','Muy buena'),\n        new Message(1,2,'Un poco aburrida','Del monton'),\n        new Message(2,5,'Lo mejor que se ha hecho nunca','WOWOWW'),\n        new Message(3,3,'Entretiene','No esta mal'),\n        new Message(4,0,'Ni de gratis','AARGh'),\n        new Message(5,1,'Me dormi','Zzzz')\n    ];\n\n    private _listaComentarios_Usuarios:number[][]=[\n        [0,0],\n        [1,2],\n        [2,1],\n        [3,1],\n        [4,2],\n        [5,1]\n    ];\n\n\n    constructor(private _userService:userService){}\n\n    public getMesFromUserID(userID:number){\n        let listadoValoracionesYUsuarios=Observable. fromArray(this._listaComentarios_Usuarios);\n        let listadoFiltradoConValoracionDelUsuario= listadoValoracionesYUsuarios.filter((x)=>{\n            return x[1]==userID\n        }).map((x)=>{\n            return x[0]\n        });\n        let listadoComentariosDelUsuario = Observable.fromArray(this._listaComentarios);\n        let comentarios= listadoFiltradoConValoracionDelUsuario.flatMap((idcomentario)=>{\n            return listadoComentariosDelUsuario.filter((comentario)=>{\n                return idcomentario==comentario.id;\n            })\n        })\n\n        let userinfo=this._userService.getUserByID(userID);\n        let comentarioConUserInfo=comentarios.flatMap(x=>{\n        return userinfo.map(y=>{return({comentario:x,usuario:y})});\n    });\n        return comentarioConUserInfo;\n\n    }\n    \n}\n"]}