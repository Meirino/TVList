{"version":3,"file":"actores.service.js","sourceRoot":"","sources":["actores.service.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Created by Javi on 17/05/2016.\r\n */\r\nimport {Injectable} from 'angular2/core';\r\nimport {withObserver} from './utils';\r\nimport {RequestOptions, Request, RequestMethod, HTTP_PROVIDERS, Http, RequestOptionsArgs, Headers} from 'angular2/http';\r\nimport 'rxjs/Rx';\r\n\r\nexport class Actor {\r\n    constructor(public id:number,\r\n    public nombre:string,\r\n    public descripcion:string,\r\n    public IMG:string,\r\n    public obras:string[]) {}\r\n}\r\n\r\n@Injectable()\r\nexport class ActoresService {\r\n    public nuevoActor:Actor;\r\n    public obras: string = '';\r\n    public url = \"https://localhost:8443/actores/\";\r\n    public lista:Actor[];\r\n    //public options:RequestOptionsArgs;\r\n\r\n    constructor(private http: Http) {\r\n        //this.options.headers.append('Content-Type', 'application/json');\r\n        //this.options.headers.append('Authorization', 'Basic YWRtaW46cGFzcw==');\r\n    }\r\n\r\n    getDatos() {\r\n        let listaPro:Actor[] = [];\r\n        this.http.get(this.url).subscribe(response => {\r\n            for(let i = 0; i < response.json().length;i++) {\r\n                console.log(response.json()[i]);\r\n                listaPro.push(new Actor(response.json()[i].id, response.json()[i].nombre, response.json()[i].descripcion, response.json()[i].IMG, response.json()[i].obras));\r\n            }\r\n        });\r\n        return listaPro;\r\n    }\r\n\r\n    anadirActor(actor:Actor) {\r\n        let body = JSON.stringify(actor);\r\n        console.log(body);\r\n        let headers = new Headers({\r\n            'Content-Type': 'application/json'\r\n        });\r\n        let options = new RequestOptions({headers})\r\n        this.http.post(this.url, body, options).subscribe(\r\n            response => console.log(response),\r\n            error => console.error(error)\r\n        );\r\n    }\r\n\r\n    eliminarActor(id:string) {\r\n        let jsonActor = id; //JSON.stringify(actor.id);\r\n        this.http.delete(\"https://localhost:8443/actores/\"+id).subscribe(\r\n            response => {\r\n                console.log(response);\r\n            },\r\n            error => console.log(error)\r\n        );\r\n    }\r\n\r\n    getActorByNombre(nombre:string) {\r\n        return this.lista.filter(actor => actor.nombre == nombre);\r\n    }\r\n}"]}