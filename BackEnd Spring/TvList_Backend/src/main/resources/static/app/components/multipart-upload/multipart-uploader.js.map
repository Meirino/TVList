{"version":3,"file":"multipart-uploader.js","sourceRoot":"","sources":["multipart-uploader.ts"],"names":[],"mappings":"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","sourcesContent":["import {MultipartItem} from \"./multipart-item\";\r\n\r\nexport class MultipartUploader {\r\n\t\r\n  public url:string;\r\n  public authToken:string;\r\n  public isUploading:boolean = false;\r\n  public progress:number = 0;\r\n  public isHTML5:boolean = true;\r\n\r\n  constructor(public options:any) {\r\n    // Object.assign(this, options);\r\n    this.url = options.url;\r\n    this.authToken = options.authToken;\r\n  }\r\n\r\n  public uploadItem(item:MultipartItem) {\r\n    console.debug(\"multipart-uploader.ts & uploadItem() ==>.\");\r\n    if (this.isUploading) {\r\n      console.debug(\"multipart-uploader.ts & uploadItem() uploader is uploading now.\");\r\n      return;\r\n    }\r\n    this.isUploading = true;\r\n    this._xhrTransport(item);\r\n  }\r\n\r\n  private _onBeforeUploadItem(item:any) {\r\n    item._onBeforeUpload();\r\n  }\r\n\r\n  private _parseHeaders(headers:any) {\r\n    let parsed:any = {}, key:any, val:any, i:any;\r\n\r\n    if (!headers) {\r\n      return parsed;\r\n    }\r\n\r\n    headers.split('\\n').map((line:any) => {\r\n      i = line.indexOf(':');\r\n      key = line.slice(0, i).trim().toLowerCase();\r\n      val = line.slice(i + 1).trim();\r\n\r\n      if (key) {\r\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\r\n      }\r\n    });\r\n\r\n    return parsed;\r\n  }\r\n\r\n  private _transformResponse(response:any, headers:any):any {\r\n    return response;\r\n  }\r\n\r\n  private _isSuccessCode(status:any) {\r\n    return (status >= 200 && status < 300) || status === 304;\r\n  }\r\n\r\n  private _render() {\r\n    // todo: ?\r\n  }\r\n\r\n  _xhrTransport(item:any) {\r\n\t  \r\n    console.debug(\"multipart-uploader.ts & _xhrTransport() ==>.\");\r\n\r\n    let xhr = item._xhr = new XMLHttpRequest();\r\n\r\n    //if (item.formData.length === 0){\r\n    //  throw new TypeError('Invalid form,form is empty.');\r\n    //}\r\n\r\n    this._onBeforeUploadItem(item);\r\n\r\n    xhr.upload.onprogress = (event) => {\r\n    };\r\n\r\n    xhr.onload = () => {\r\n      console.debug(\"multipart-uploader.ts & _xhrTransport.onload() ==>\");\r\n      let headers = this._parseHeaders(xhr.getAllResponseHeaders());\r\n      let response = this._transformResponse(xhr.response, headers);\r\n      let gist = this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\r\n      let method = '_on' + gist + 'Item';\r\n      (<any>this)[method](item, response, xhr.status, headers);\r\n      this._onCompleteItem(item, response, xhr.status, headers);\r\n    };\r\n\r\n    xhr.onerror = () => {\r\n      console.debug(\"multipart-uploader.ts & _xhrTransport.onerror() ==>\");\r\n      let headers = this._parseHeaders(xhr.getAllResponseHeaders());\r\n      let response = this._transformResponse(xhr.response, headers);\r\n      this._onErrorItem(item, response, xhr.status, headers);\r\n      //this._onCompleteItem(item, response, xhr.status, headers);\r\n    };\r\n\r\n    xhr.onabort = () => {\r\n      console.debug(\"multipart-uploader.ts & _xhrTransport.onabort() ==>\");\r\n      let headers = this._parseHeaders(xhr.getAllResponseHeaders());\r\n      let response = this._transformResponse(xhr.response, headers);\r\n      //this._onCancelItem(item, response, xhr.status, headers);\r\n      this._onCompleteItem(item, response, xhr.status, headers);\r\n    };\r\n\r\n    xhr.open(item.method, this.url, true);\r\n    xhr.withCredentials = item.withCredentials;\r\n\r\n    if (this.authToken) {\r\n      xhr.setRequestHeader('Authorization', this.authToken);\r\n    }\r\n    console.debug(\"multipart-uploader.ts & _xhrTransport() send...\");\r\n    xhr.send(item.formData);\r\n    this._render();\r\n  }\r\n\r\n  public onSuccessItem(item:any, response:any, status:any, headers:any) {\r\n  }\r\n\r\n  public onErrorItem(item:any, response:any, status:any, headers:any) {\r\n    this.isUploading = false;\r\n  }\r\n\r\n  public onCancelItem(item:any, response:any, status:any, headers:any) {\r\n  }\r\n\r\n  public onCompleteItem(item:any, response:any, status:any, headers:any) {\r\n  }\r\n\r\n  private _onSuccessItem(item:any, response:any, status:any, headers:any) {\r\n    item._onSuccess(response, status, headers);\r\n    this.onSuccessItem(item, response, status, headers);\r\n  }\r\n\r\n  public _onErrorItem(item:any, response:any, status:any, headers:any) {\r\n    console.debug(\"multipart-uploader.ts & _onErrorItem() ==>\" + \" Error status:\" + status);\r\n    item._onError(response, status, headers);\r\n    this.onErrorItem(item, response, status, headers);\r\n  }\r\n\r\n  private _onCancelItem(item:any, response:any, status:any, headers:any) {\r\n    item._onCancel(response, status, headers);\r\n    this.onCancelItem(item, response, status, headers);\r\n  }\r\n\r\n  public _onCompleteItem(item:any, response:any, status:any, headers:any) {\r\n    item._onComplete(response, status, headers);\r\n    this.onCompleteItem(item, response, status, headers);\r\n\r\n    this.isUploading = false;\r\n\r\n    //this.progress = this._getTotalProgress();\r\n    this._render();\r\n  }\r\n}\r\n"]}