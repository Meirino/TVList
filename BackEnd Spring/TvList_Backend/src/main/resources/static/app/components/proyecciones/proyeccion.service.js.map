{"version":3,"file":"proyeccion.service.js","sourceRoot":"","sources":["proyeccion.service.ts"],"names":[],"mappings":"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","sourcesContent":["\r\nimport {Injectable,OnInit} from 'angular2/core';\r\nimport {Observable,ConnectableObservable,Subject } from 'rxjs/Rx';\r\nimport { Http, RequestOptions, Headers } from 'angular2/http';\r\nimport {proyeccion} from './proyeccion.data';\r\nimport {tipo} from './proyeccion.data';\r\nimport {MultipartItem} from \"../multipart-upload/multipart-item\";\r\nimport {MultipartUploader} from \"../multipart-upload/multipart-uploader\";\r\n\r\n\r\n@Injectable()\r\nexport class proyeccionService {\r\n\r\n    private _url:string=\"/peliculas?\";\r\n\r\n    constructor(private _http:Http) {\r\n    }\r\n\r\n\r\n    public getPeliculasByTypeAndTitleAndPage(tipo:string,titulo:any,pagina:string){\r\n        if (!pagina)\r\n            pagina=\"\";\r\n        else\r\n            pagina=\"&page=\"+pagina;\r\n        if (!tipo)\r\n            tipo=\"\";\r\n        else\r\n            tipo=\"&genre=\"+tipo;\r\n        if (!titulo)\r\n            titulo=\"\";\r\n        else\r\n            titulo=\"&title=\"+titulo;\r\n        var urlFull=this._url+tipo+titulo+pagina;\r\n        return this._http.get(urlFull)\r\n            .map(response => response.json())\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    public createProy(proyec:proyeccion){\r\n        let body = JSON.stringify(proyec);\r\n        let headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'X-Requested-With': 'XMLHttpRequest'\r\n        });\r\n        let options = new RequestOptions({ headers });\r\n\r\n        return this._http.post(\"/peliculas\", body, options)\r\n            .map(response => response.json())\r\n            .catch(error => error);\r\n\r\n    }\r\n\r\n\r\n    public convertirAListaPeliculas(lo:any){\r\n        let listaPeliculas:proyeccion[]=new Array();\r\n        for (var o of lo){\r\n            listaPeliculas.push(this.convertirAPelicula(o));\r\n        }\r\n        return listaPeliculas;\r\n    }\r\n\r\n    public convertirAPelicula(o:any){\r\n        let pelicula=new proyeccion(o.id,o.title,o.description,o.image)\r\n        return pelicula;\r\n    }\r\n\r\n    public getTiposPelicula(){\r\n        let tipos:tipo[]=[];\r\n        tipos.push(new tipo(1,\"Accion\"));\r\n        tipos.push(new tipo(2,\"Aventuras\"));\r\n        tipos.push(new tipo(3,\"Comedia\"));\r\n        tipos.push(new tipo(4,\"Infantil\"));\r\n        tipos.push(new tipo(5,\"Suspense\"));\r\n        tipos.push(new tipo(6,\"Romance\"));\r\n        return tipos;\r\n        \r\n    }\r\n\r\n    private handleError (error: any) {\r\n        let errMsg = (error.message) ? error.message :\r\n            error.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n        return Observable.throw(errMsg);\r\n    }\r\n\r\n    upload(archivo:File) {\r\n\r\n\r\n\r\n        if (archivo == null){\r\n            console.error(\"You have to select a file and set a description.\");\r\n            return;\r\n        }\r\n\r\n        let formData = new FormData();\r\n\r\n        //formData.append(\"description\", this.description);\r\n        formData.append(\"file\",  archivo);\r\n\r\n        let multipartItem = new MultipartItem(new MultipartUploader({url: '/image/upload/pelicula'}));\r\n\r\n        multipartItem.formData = formData;\r\n\r\n        return multipartItem;\r\n    }\r\n\r\n}"]}