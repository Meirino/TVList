{"version":3,"file":"proyeccion.service.js","sourceRoot":"","sources":["proyeccion.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;YASA;gBAII,2BAAoB,KAAU;oBAAV,UAAK,GAAL,KAAK,CAAK;oBAFtB,SAAI,GAAQ,aAAa,CAAC;gBAGlC,CAAC;gBAGM,6DAAiC,GAAxC,UAAyC,IAAW,EAAC,MAAa,EAAC,MAAa;oBAC5E,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;wBACR,MAAM,GAAC,EAAE,CAAC;oBACd,IAAI;wBACA,MAAM,GAAC,QAAQ,GAAC,MAAM,CAAC;oBAC3B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;wBACN,IAAI,GAAC,EAAE,CAAC;oBACZ,IAAI;wBACA,IAAI,GAAC,SAAS,GAAC,IAAI,CAAC;oBACxB,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;wBACR,MAAM,GAAC,EAAE,CAAC;oBACd,IAAI;wBACA,MAAM,GAAC,UAAU,GAAC,MAAM,CAAC;oBAC7B,IAAI,OAAO,GAAC,IAAI,CAAC,IAAI,GAAC,IAAI,GAAC,MAAM,GAAC,MAAM,CAAC;oBACzC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC;yBACzB,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;yBAChC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBACjC,CAAC;gBAGM,oDAAwB,GAA/B,UAAgC,EAAM;oBAClC,IAAI,cAAc,GAAc,IAAI,KAAK,EAAE,CAAC;oBAC5C,GAAG,CAAC,CAAU,UAAE,EAAF,SAAE,EAAF,gBAAE,EAAF,IAAE,CAAC;wBAAZ,IAAI,CAAC,WAAA;wBACN,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;qBACnD;oBACD,MAAM,CAAC,cAAc,CAAC;gBAC1B,CAAC;gBAEM,8CAAkB,GAAzB,UAA0B,CAAK;oBAC3B,IAAI,QAAQ,GAAC,IAAI,4BAAU,CAAC,CAAC,CAAC,EAAE,EAAC,CAAC,CAAC,KAAK,EAAC,CAAC,CAAC,WAAW,EAAC,CAAC,CAAC,KAAK,CAAE,CAAA;oBAChE,MAAM,CAAC,QAAQ,CAAC;gBACpB,CAAC;gBAEO,uCAAW,GAAnB,UAAqB,KAAU;oBAC3B,IAAI,MAAM,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,OAAO;wBACxC,KAAK,CAAC,MAAM,GAAM,KAAK,CAAC,MAAM,WAAM,KAAK,CAAC,UAAY,GAAG,cAAc,CAAC;oBAC5E,MAAM,CAAC,eAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBACpC,CAAC;gBA9CL;oBAAC,iBAAU,EAAE;;qCAAA;gBAiDb,wBAAC;YAAD,CAAC,AAhDD,IAgDC;YAhDD,iDAgDC,CAAA","sourcesContent":["/**\r\n * Created by david on 19/04/2016.\r\n */\r\nimport {Injectable,OnInit} from 'angular2/core';\r\nimport {Observable,ConnectableObservable,Subject } from 'rxjs/Rx';\r\nimport { Http, RequestOptions, Headers } from 'angular2/http';\r\nimport {proyeccion} from './proyeccion.data';\r\n\r\n@Injectable()\r\nexport class proyeccionService {\r\n\r\n    private _url:string=\"/peliculas?\";\r\n\r\n    constructor(private _http:Http) {\r\n    }\r\n\r\n\r\n    public getPeliculasByTypeAndTitleAndPage(tipo:string,titulo:string,pagina:string){\r\n        if (!pagina)\r\n            pagina=\"\";\r\n        else\r\n            pagina=\"&page=\"+pagina;\r\n        if (!tipo)\r\n            tipo=\"\";\r\n        else\r\n            tipo=\"&genre=\"+tipo;\r\n        if (!titulo)\r\n            titulo=\"\";\r\n        else\r\n            titulo=\"&titulo=\"+titulo;\r\n        var urlFull=this._url+tipo+titulo+pagina;\r\n        return this._http.get(urlFull)\r\n            .map(response => response.json())\r\n            .catch(this.handleError);\r\n    }\r\n\r\n\r\n    public convertirAListaPeliculas(lo:any){\r\n        let listaPeliculas:proyeccion[]=new Array();\r\n        for (var o of lo){\r\n            listaPeliculas.push(this.convertirAPelicula(o));\r\n        }\r\n        return listaPeliculas;\r\n    }\r\n\r\n    public convertirAPelicula(o:any){\r\n        let pelicula=new proyeccion(o.id,o.title,o.description,o.image )\r\n        return pelicula;\r\n    }\r\n\r\n    private handleError (error: any) {\r\n        let errMsg = (error.message) ? error.message :\r\n            error.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n        return Observable.throw(errMsg);\r\n    }\r\n    \r\n\r\n}"]}