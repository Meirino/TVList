{"version":3,"file":"personal.service.js","sourceRoot":"","sources":["personal.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;YAKA;gBAEE,kBAAmB,EAAU,EAAS,MAAc,EAC3C,WAAkB,EAClB,OAAc,EACd,KAAc;oBAHJ,OAAE,GAAF,EAAE,CAAQ;oBAAS,WAAM,GAAN,MAAM,CAAQ;oBAC3C,gBAAW,GAAX,WAAW,CAAO;oBAClB,YAAO,GAAP,OAAO,CAAO;oBACd,UAAK,GAAL,KAAK,CAAS;gBAAG,CAAC;gBAC7B,eAAC;YAAD,CAAC,AAND,IAMC;YAND,+BAMC,CAAA;YAGD;gBAAA;oBACU,eAAU,GAAG;wBACnB,IAAI,QAAQ,CAAC,CAAC,EAAE,cAAc,EAAC,6BAA6B,EAAC,GAAG,EAAC,CAAC,YAAY,CAAC,CAAC;wBAChF,IAAI,QAAQ,CAAC,CAAC,EAAE,cAAc,EAAE,sCAAsC,EAAE,GAAG,EAAE,CAAC,cAAc,CAAC,CAAC;qBAC/F,CAAA;gBAkCH,CAAC;gBAhCC,qCAAW,GAAX,UAAY,OAAgB;oBAC1B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;gBAC/B,CAAC;gBAED,uCAAa,GAAb;oBACE,MAAM,CAAC,oBAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACvC,CAAC;gBAED,yCAAe,GAAf,UAAgB,EAAkB;oBAChC,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,EAAZ,CAAY,CAAC,CAAC,CAAC,CAAC,CAAA;oBACvD,MAAM,CAAC,oBAAY,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACtG,CAAC;gBAED,2CAAiB,GAAjB,UAAkB,GAAU;oBAC1B,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,MAAM,IAAI,GAAG,EAAf,CAAe,CAAC,CAAA;oBACvD,MAAM,CAAC,IAAI,CAAC;gBACd,CAAC;gBAED,2CAAiB,GAAjB,UAAkB,IAAY;oBAC5B,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAA1B,CAA0B,CAAC,CAAA;oBAClE,MAAM,CAAC,IAAI,CAAC;gBACd,CAAC;gBAED,uCAAa,GAAb,UAAc,OAAiB;oBAC7B,GAAG,CAAA,CAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;wBACxC,EAAE,CAAA,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,OAAO,CAAC,EAAE,CAAC,CAAA,CAAC;4BACvC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;4BAC5B,KAAK,CAAC;wBACR,CAAC;oBACL,CAAC;oBACD,MAAM,CAAC,oBAAY,CAAC,SAAS,CAAC,CAAC;gBACjC,CAAC;gBAtCH;oBAAC,iBAAU,EAAE;;mCAAA;gBAuCb,sBAAC;YAAD,CAAC,AAtCD,IAsCC;YAtCD,6CAsCC,CAAA","sourcesContent":["import {Injectable} from 'angular2/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {withObserver} from './utils'\r\nimport {Serie} from './series.service';\r\n\r\nexport class Personal {\r\n\r\n  constructor(public id: number, public nombre: string,\r\n    public descripcion:string,\r\n    public rutaIMG:string,\r\n    public obras:string[]) {}\r\n}\r\n\r\n@Injectable()\r\nexport class PersonalService {\r\n  private Personales = [\r\n    new Personal(1, 'Ryan Gosling','Actor protagonista en Drive','#',['Drive 2011']),\r\n    new Personal(2, 'Bob Odenkirk', 'Actor en Break Bad como Saul Goodman', '#', ['Breaking Bad'])\r\n  ]\r\n\r\n  addPersonal(persona:Personal) {\r\n    this.Personales.push(persona)\r\n  }\r\n\r\n  getPersonales() {\r\n    return withObserver(this.Personales);\r\n  }\r\n\r\n  getPersonalbyID(id:number | string) {\r\n    let elem = this.Personales.filter(h => h.id === +id)[0]\r\n    return withObserver(new Personal(elem.id, elem.nombre, elem.descripcion, elem.rutaIMG, elem.obras));\r\n  }\r\n\r\n  getPersonalbyName(nom:string) {\r\n    let elem = this.Personales.filter(h => h.nombre == nom)\r\n    return elem;\r\n  }\r\n\r\n  getPersonalByObra(obra: string) {\r\n    let elem = this.Personales.filter(h => h.obras.indexOf(obra) > -1)\r\n    return elem;\r\n  }\r\n\r\n  removePersona(persona: Personal){\r\n    for(let i=0; i<this.Personales.length; i++){\r\n        if(this.Personales[i].id === persona.id){\r\n          this.Personales.splice(i,1);\r\n          break;\r\n        }\r\n    }\r\n    return withObserver(undefined);\r\n  }\r\n}\r\n"]}